(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3692],{28280:function(n,e,r){"use strict";r.r(e),r.d(e,{default:function(){return p}});var o=r(1717),t=r(11566),a=(r(27378),r(35318));function l(n,e){var r=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.push.apply(r,o)}return r}function i(n){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){(0,o.Z)(n,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(r,e))}))}return n}var c={};function p(n){var e=n.components,r=(0,t.Z)(n,["components"]);return(0,a.kt)("wrapper",i(i(i({},c),r),{},{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",null,"Color"),(0,a.kt)("h2",null,"Default Color"),(0,a.kt)("p",null,"Basically Andromeda Design System supports two ",(0,a.kt)("inlineCode",{parentName:"p"},"dynamic colors")," that are neutral and primary color."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},(0,a.kt)("b",null,"Dynamic colors"),": They are used in css variable...meaning you can change their value by adding color scheme in theme.")),(0,a.kt)("p",null,"The default color of all components will be neutral. Add prop ",(0,a.kt)("inlineCode",{parentName:"p"},'color="colorName"')," to change color."),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-tsx"}),'import * as React from "react";\nimport {\n  AndromedaDesignSystemProvider,\n  Button,\n} from "@andromedaprotocol/react";\n\nfunction App() {\n  return (\n    <AndromedaDesignSystemProvider>\n      <Button>Neutral</Button> // neutral color\n      <Button color="primary">Primary</Button> // primary color\n    </AndromedaDesignSystemProvider>\n  );\n}\n')),(0,a.kt)("h2",null,"Adding Color"),(0,a.kt)("p",null,"To add other colors edit the ",(0,a.kt)("inlineCode",{parentName:"p"},"colors")," option in the @andromedaprotocol/core plugin of tailwindcss."),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-js"}),'// tailwind.config.js\nimport colors from "tailwindcss/colors";\n\nmodule.exports = {\n  theme: {\n    extend: {\n      colors: {\n        pink: colors.pink,\n        // name your color\n        warning: colors.yellow,\n      },\n    },\n  },\n  // add Andromeda Design System plugin\n  plugins: [\n    require("@tailwindcss/forms"),\n    require("@andromedaprotocol/core")({\n      colors: ["pink", "warning"],\n    }),\n    // ...\n  ],\n};\n')),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-tsx"}),'import * as React from "react";\nimport {\n  AndromedaDesignSystemProvider,\n  Button,\n} from "@andromedaprotocol/react";\n\nfunction App() {\n  return (\n    <AndromedaDesignSystemProvider>\n      <Button color="warning">Primary</Button> // warning color\n      <Button color="pink">Primary</Button> // pink color\n    </AndromedaDesignSystemProvider>\n  );\n}\n')))}p.isMDXComponent=!0},67358:function(n,e,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/color-mode",function(){return r(28280)}])}},function(n){n.O(0,[9774,2888,179],(function(){return e=67358,n(n.s=e);var e}));var e=n.O();_N_E=e}]);