(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5672],{78676:function(e,n,l){"use strict";l.r(n),l.d(n,{default:function(){return d}});var t=l(24246),o=(l(27378),l(44044)),a=l(78943),i=l(82745),r=[{name:"Input",value:"input",propTypes:[{property:"color",type:["string"],default:"primary",values:[],description:"Set the input color"},{property:"size",type:["xs","sm","md","lg","xl"],default:"md",values:["xs","sm","md","lg","xl"],description:"Size of the input"},{property:"variant",type:["outline","solid"],default:"outline",values:["outline","solid"],description:"Controls input appearance"},{property:"disabled",type:["boolean"],default:!1,values:[],description:"Makes input disabled"},{property:"invalid",type:["boolean"],default:!1,values:[],description:"Makes input invalid"},{property:"required",type:["boolean"],default:!1,values:[],description:"Makes input required"},{property:"readOnly",type:["boolean"],default:!1,values:[],description:"Makes input readOnly"},{property:"aria-label",type:["string"],default:"",values:[],description:"A label that describes the input"},{property:"aria-describedby",type:["string"],default:"",values:[],description:"The id of the element that describes the input"}]}],s={name:"Input",importer:'import { Input } from "@andromedaprotocol/react"',demoList:[{name:"Basic usage",files:[{name:"input.tsx",code:'<div className="flex flex-col w-full p-8 space-y-4">\n  <Input placeholder="jon@gmail.com" />\n  <Input disabled placeholder="jon@gmail.com" />\n</div>',readOnly:!1}]},{name:"Variants",files:[{name:"input.tsx",code:'<div className="flex flex-col w-full p-8 space-y-4">\n  <Input placeholder="jon@gmail.com" />\n  <Input placeholder="jon@gmail.com" variant="solid" />\n</div>',readOnly:!1}]},{name:"Adding color",files:[{name:"input.tsx",code:'<div className="flex flex-col w-full p-8 space-y-4">\n  <Input color="orange" placeholder="jon@gmail.com" />\n</div>',readOnly:!1},a.g]},{name:"Invalid state",files:[{name:"input.tsx",code:'<div className="flex flex-col w-full p-8 space-y-4">\n  <Input invalid placeholder="jon@gmail.com" />\n</div>',readOnly:!1}]},{name:"Sizes",files:[{name:"input.tsx",code:'<div className="flex flex-col w-full p-8 space-y-4">\n  <Input placeholder="jon@gmail.com" size="xs" />\n  <Input placeholder="jon@gmail.com" size="sm" />\n  <Input placeholder="jon@gmail.com" size="md" />\n  <Input placeholder="jon@gmail.com" size="lg" />\n  <Input placeholder="jon@gmail.com" size="xl" />\n</div>',readOnly:!1}]},{name:"Input Element",files:[{name:"input.tsx",code:'<div className="flex flex-col w-full p-8 space-y-4">\n  <Input.Group>\n    <Input.LeftElement\n      children="$"\n      className="pointer-events-none text-neutral-300"\n    />\n    <Input placeholder="ben@gmail.com" />\n    <Input.RightElement\n      children={<Icon as={GiftIcon} label="gift" className="w-4 h-4 text-green-500" />}\n    />\n  </Input.Group>\n</div>',readOnly:!1}]},{name:"Input Addon",files:[{name:"input.tsx",code:'<div className="flex flex-col w-full p-8 space-y-4">\n  <Input.Group>\n    <Input.LeftAddon children="https://" />\n    <Input placeholder="mysite" />\n    <Input.RightAddon children=".com" />\n  </Input.Group>\n</div>',readOnly:!1}]}],propList:r};function d(){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.Z,{title:"Tailwind CSS Input",description:"A form control that accepts a single line of text."}),(0,t.jsx)(o.Z,{component:s})]})}},78943:function(e,n,l){"use strict";l.d(n,{g:function(){return t},D:function(){return o}});var t={name:"tailwind.config.js",code:'import colors from "tailwindcss/colors";\n\nmodule.exports = {\n  mode: "jit",\n  purge: [\n    // ...\n    "./node_modules/@andromedaprotocol/**/*.{js,ts,jsx,tsx}", \n  ],\n  darkMode: "class", // or \'media\' or \'class\'\n  theme: {\n    extend: {\n      colors: {\n        orange: colors.orange,\n      }\n    }\n  },\n  variants: {\n    extend: {},\n  },\n  // add plugin\n  plugins: [\n    require("@tailwindcss/forms"),\n    require("@andromedaprotocol/core")({\n      colors: ["orange"],\n    }),\n    // ...\n  ],\n};',readOnly:!0},o={name:"tailwind.config.js",code:'module.exports = {\n  mode: "jit",\n  purge: [\n    // ...\n    "./node_modules/@andromedaprotocol/**/*.{js,ts,jsx,tsx}", \n  ],\n  darkMode: "class", // or \'media\' or \'class\'\n  theme: {\n    extend: {\n      borderColor: {\n        inherit: "inherit",\n      },\n    }\n  },\n  variants: {\n    extend: {},\n  },\n  // add plugin\n  plugins: [\n    require("@tailwindcss/forms"),\n    require("@andromedaprotocol/core"),\n    // ...\n  ],\n};',readOnly:!0}},62020:function(e,n,l){(window.__NEXT_P=window.__NEXT_P||[]).push(["/input",function(){return l(78676)}])}},function(e){e.O(0,[1955,3989,1283,3430,2463,9774,2888,179],(function(){return n=62020,e(e.s=n);var n}));var n=e.O();_N_E=n}]);