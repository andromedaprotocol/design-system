(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2455],{96017:function(e,o,n){"use strict";n.r(o),n.d(o,{default:function(){return s}});var c=n(24246),a=(n(27378),n(9203)),r=n(78943),l=n(82745),t=[{name:"Checkbox",value:"checkbox",propTypes:[{property:"color",type:["string"],default:"primary",values:[],description:"Set the checkbox color"},{property:"size",type:["sm","md","lg","xl"],default:"md",values:["sm","md","lg","xl"],description:"Size of the checkbox"},{property:"disabled",type:["boolean"],default:!1,values:[],description:"Makes checkbox disabled"},{property:"invalid",type:["boolean"],default:!1,values:[],description:"Makes checkbox invalid"},{property:"required",type:["boolean"],default:!1,values:[],description:"Makes checkbox required"},{property:"readOnly",type:["boolean"],default:!1,values:[],description:"Makes checkbox readOnly"},{property:"defaultChecked",type:["boolean"],default:!1,values:[],description:"The checkbox will be initially checked"},{property:"checked",type:["boolean"],default:!1,values:[],description:"The checkbox will be checked"},{property:"id",type:["string"],default:"",values:[],description:"Checkbox id"},{property:"name",type:["string"],default:"",values:[],description:"Checkbox name"},{property:"value",type:["string","number"],default:"",values:[],description:"Checkbox value"},{property:"onChange",type:["React.ChangeEventHandler<HTMLInputElement>"],default:"",values:[],description:"The callback invoked when the checked state of the `Checkbox` changes.."},{property:"aria-label",type:["string"],default:"",values:[],description:"A label that describes the input"},{property:"aria-describedby",type:["string"],default:"",values:[],description:"The id of the element that describes the input."},{property:"aria-labelledby",type:["string"],default:"",values:[],description:"Refers to the id of the element that labels the checkbox element."}]},{name:"Checkbox.Group",value:"checkbox-group",propTypes:[{property:"id",type:["string"],default:"",values:[],description:"The id of the checkbox group."},{property:"name",type:["string"],default:"",values:[],description:"The name of the checkbox group. This prop is passed to each checkbox"},{property:"defaultValue",type:['CheckboxProps["defaultValue"]'],default:"",values:[],description:"The initial value of the checkbox group"},{property:"value",type:['CheckboxProps["value"]'],default:"",values:[],description:"The value of the checkbox group"},{property:"onChange",type:['(value: Array<CheckboxProps["value"]>) => void;'],default:"",values:[],description:"The callback fired when any children Checkbox is checked or unchecked"},{property:"inline",type:["boolean"],default:!1,values:[],description:"The checkboxes will aligned horizontally"},{property:"size",type:['CheckboxProps["size"]'],default:"",values:[],description:"Size of all wrapped checkbox"},{property:"color",type:['CheckboxProps["color"]'],default:"",values:[],description:"Color of all wrapped checkbox"}]}],i={name:"Checkbox",importer:'import { Checkbox } from "@andromedaprotocol/react"',demoList:[{name:"Basic usage",files:[{name:"checkbox.tsx",code:'<div className="flex flex-wrap w-full p-8 space-x-4">\n  <Checkbox>Checkbox</Checkbox>\n  <Checkbox defaultChecked>Checkbox</Checkbox>\n</div>',readOnly:!1}]},{name:"Adding color",files:[{name:"checkbox.tsx",code:'<div className="flex flex-wrap w-full p-8 space-x-4">\n  <Checkbox color="orange">Checkbox</Checkbox>\n  <Checkbox color="orange" defaultChecked>Checkbox</Checkbox>\n</div>',readOnly:!1},r.g]},{name:"Invalid state",files:[{name:"checkbox.tsx",code:'<div className="flex flex-wrap w-full p-8 space-x-4">\n  <Checkbox invalid>Checkbox</Checkbox>\n  <Checkbox invalid defaultChecked>\n    Checkbox\n  </Checkbox>\n</div>',readOnly:!1}]},{name:"Disabled state",files:[{name:"checkbox.tsx",code:'<div className="flex flex-wrap w-full p-8 space-x-4">\n  <Checkbox disabled>Checkbox</Checkbox>\n  <Checkbox disabled defaultChecked>\n    Checkbox\n  </Checkbox>\n  <Checkbox readOnly>Checkbox</Checkbox>\n  <Checkbox readOnly defaultChecked>\n    Checkbox\n  </Checkbox>\n</div>',readOnly:!1}]},{name:"Sizes",files:[{name:"checkbox.tsx",code:'<div className="flex flex-wrap w-full p-8 space-x-4">\n  <Checkbox size="sm">Checkbox</Checkbox>\n  <Checkbox size="md">Checkbox</Checkbox>\n  <Checkbox size="lg">Checkbox</Checkbox>\n  <Checkbox size="xl">Checkbox</Checkbox>\n</div>',readOnly:!1}]},{name:"Checkbox group",files:[{name:"checkbox.tsx",code:'<div className="flex flex-wrap w-full p-8 space-x-4">\n  <Checkbox.Group\n    className="space-x-4"\n    inline\n    defaultValue={["1", "3"]}\n  >\n    <Checkbox value="1">First</Checkbox>\n    <Checkbox value="2">Second</Checkbox>\n    <Checkbox value="3">Third</Checkbox>\n  </Checkbox.Group>\n</div>',readOnly:!1}]},{name:"Form control",files:[{name:"checkbox.tsx",code:'<div className="flex flex-wrap w-full p-8 space-x-4">\n  <FormControl>\n    <FormLabel>Checkbox Group</FormLabel>\n    <Checkbox.Group\n      className="space-x-4"\n      inline\n      defaultValue={["1", "3"]}\n    >\n      <Checkbox value="1">First</Checkbox>\n      <Checkbox value="2">Second</Checkbox>\n      <Checkbox value="3">Third</Checkbox>\n    </Checkbox.Group>\n    <FormHelperText>Select only if you\'re a fan.</FormHelperText>\n  </FormControl>\n</div>',readOnly:!1}]}],propList:t};function s(){return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(l.Z,{title:"Tailwind CSS Checkbox",description:"An input for choosing from predefined options."}),(0,c.jsx)(a.Z,{component:i})]})}},78943:function(e,o,n){"use strict";n.d(o,{g:function(){return c},D:function(){return a}});var c={name:"tailwind.config.js",code:'import colors from "tailwindcss/colors";\n\nmodule.exports = {\n  mode: "jit",\n  purge: [\n    // ...\n    "./node_modules/@andromedaprotocol/**/*.{js,ts,jsx,tsx}", \n  ],\n  darkMode: "class", // or \'media\' or \'class\'\n  theme: {\n    extend: {\n      colors: {\n        orange: colors.orange,\n      }\n    }\n  },\n  variants: {\n    extend: {},\n  },\n  // add plugin\n  plugins: [\n    require("@tailwindcss/forms"),\n    require("@andromedaprotocol/core")({\n      colors: ["orange"],\n    }),\n    // ...\n  ],\n};',readOnly:!0},a={name:"tailwind.config.js",code:'module.exports = {\n  mode: "jit",\n  purge: [\n    // ...\n    "./node_modules/@andromedaprotocol/**/*.{js,ts,jsx,tsx}", \n  ],\n  darkMode: "class", // or \'media\' or \'class\'\n  theme: {\n    extend: {\n      borderColor: {\n        inherit: "inherit",\n      },\n    }\n  },\n  variants: {\n    extend: {},\n  },\n  // add plugin\n  plugins: [\n    require("@tailwindcss/forms"),\n    require("@andromedaprotocol/core"),\n    // ...\n  ],\n};',readOnly:!0}},44769:function(e,o,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/checkbox",function(){return n(96017)}])}},function(e){e.O(0,[1955,2943,8447,5455,8532,9774,2888,179],(function(){return o=44769,e(e.s=o);var o}));var o=e.O();_N_E=o}]);