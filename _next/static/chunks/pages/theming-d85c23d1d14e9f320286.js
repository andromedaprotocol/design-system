(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9840],{3828:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return m}});var o=t(1717),r=t(11566),a=(t(27378),t(35318));function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){(0,o.Z)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var s={};function m(e){var n=e.components,t=(0,r.Z)(e,["components"]);return(0,a.kt)("wrapper",c(c(c({},s),t),{},{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",null,"Theming"),(0,a.kt)("p",null,"By default all Andromeda Design System components use the default theme. You can extend and customize theme on top level with AndromedaDesignSystemProvider."),(0,a.kt)("h2",null,"AndromedaDesignSystemProvider"),(0,a.kt)("p",null,"AndromedaDesignSystemProvider component allows you to change theme globally. It is not required if you decide to stick with default theme:"),(0,a.kt)("pre",null,(0,a.kt)("code",c({parentName:"pre"},{className:"language-jsx"}),'import * as React from "react";\n\n// 1. import `AndromedaDesignSystemProvider` component\nimport {\n  AndromedaDesignSystemProvider,\n  Button,\n} from "@andromedaprotocol/react";\n\nfunction App() {\n  return <Button>Button</Button>;\n}\n\nfunction ThemedApp() {\n  // 2. Use at the root of your app\n  return (\n    <AndromedaDesignSystemProvider>\n      <App />\n    </AndromedaDesignSystemProvider>\n  );\n}\n')),(0,a.kt)("h2",null,"Theme structure"),(0,a.kt)("pre",null,(0,a.kt)("code",c({parentName:"pre"},{className:"language-tsx"}),'interface ColorScheme {\n  id: string;\n  type: "light" | "dark";\n  colors: {\n    bg: {\n      base: string; // used for background\n      fill: string; // used for navbar, sidebar, header\n    };\n    text: {\n      foreground: string; // text primary\n      muted: string; // text secondary\n    };\n    primary: Colors;\n    neutral: Colors;\n  };\n}\n\ninterface AndromedaTheme {\n  cursor: "default" | "pointer";\n  rounded: "0.375rem";\n  colorSchemes: Record<string, ColorScheme>;\n}\n')),(0,a.kt)("p",null,"For a complete reference of available theme properties and their default values, see the default theme configuration."),(0,a.kt)("h2",null,"Customize Theme"),(0,a.kt)("pre",null,(0,a.kt)("code",c({parentName:"pre"},{className:"language-jsx"}),'// 1. Import `extendTheme`\nimport { extendTheme, colors } from "@andromedaprotocol/react";\n\n// 2.Define new color scheme\nconst cool: ColorScheme = {\n  id: "cool",\n  type: "dark",\n  colors: {\n    bg: {\n      base: colors.coolGray["900"],\n      fill: colors.coolGray["900"],\n    },\n    text: {\n      foreground: colors.coolGray["100"],\n      muted: colors.coolGray["300"],\n    },\n    primary: colors.cyan,\n    neutral: colors.coolGray,\n  },\n};\n\n// or custom default color scheme\nconst light: ColorScheme = {\n  id: "light",\n  type: "light",\n  colors: {\n    bg: {\n      base: colors.gray["800"],\n      fill: colors.gray["900"],\n    },\n    text: {\n      foreground: colors.gray["100"],\n      muted: colors.gray["300"],\n    },\n    primary: colors.teal,\n    neutral: colors.gray,\n  },\n};\n\n// 3. Call `extendTheme` and pass your custom values\nconst theme = extendTheme({\n  cursor: "pointer",\n  colorSchemes: {\n    light,\n    cool,\n  },\n});\n\n// 4. Pass the new theme to `AndromedaDesignSystemProvider`\n<AndromedaDesignSystemProvider theme={theme} colorScheme="cool">\n  <App />\n</AndromedaDesignSystemProvider>;\n// 5. Now you can use these colors in your components\nfunction Usage() {\n  return <Button color="primary">Welcome</Button>;\n}\n')),(0,a.kt)("h2",null,"Density mode"),(0,a.kt)("p",null,"Andromeda Design System provide two density mode to apply to size of component: ",(0,a.kt)("inlineCode",{parentName:"p"},"compact")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"comfortable")),(0,a.kt)("p",null,"The following components have applyed density:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Button"),(0,a.kt)("li",{parentName:"ul"},"Input"),(0,a.kt)("li",{parentName:"ul"},"Select"),(0,a.kt)("li",{parentName:"ul"},"Switch")),(0,a.kt)("pre",null,(0,a.kt)("code",c({parentName:"pre"},{className:"language-jsx"}),'<AndromedaDesignSystemProvider density="compact">\n  <App />\n</AndromedaDesignSystemProvider>\n')),(0,a.kt)("p",null,(0,a.kt)("a",c({parentName:"p"},{href:"/themes-gallery"}),"Browse some example themes")),(0,a.kt)("h2",null,"TypeScript"),(0,a.kt)("p",null,"@andromedaprotocol/react package exports types:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"AndromedaTheme \u2013 theme object interface"),(0,a.kt)("li",{parentName:"ul"},"AndromedaThemeOverride \u2013 theme override options"),(0,a.kt)("li",{parentName:"ul"},"ColorScheme - color scheme object interface")))}m.isMDXComponent=!0},34233:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/theming",function(){return t(3828)}])}},function(e){e.O(0,[9774,2888,179],(function(){return n=34233,e(e.s=n);var n}));var n=e.O();_N_E=n}]);