(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2383],{83564:function(e,a,o){"use strict";o.r(a),o.d(a,{default:function(){return s}});var n=o(24246),i=(o(27378),o(34844)),d=o(78943),r=o(82745),l=[{name:"Radio",value:"radio",propTypes:[{property:"color",type:["string"],default:"primary",values:[],description:"Set the radio color"},{property:"size",type:["sm","md","lg","xl"],default:"md",values:["sm","md","lg","xl"],description:"Size of the radio"},{property:"disabled",type:["boolean"],default:!1,values:[],description:"Makes radio disabled"},{property:"invalid",type:["boolean"],default:!1,values:[],description:"Makes radio invalid"},{property:"required",type:["boolean"],default:!1,values:[],description:"Makes radio required"},{property:"readOnly",type:["boolean"],default:!1,values:[],description:"Makes radio readOnly"},{property:"defaultChecked",type:["boolean"],default:!1,values:[],description:"The radio will be initially checked"},{property:"checked",type:["boolean"],default:!1,values:[],description:"The radio will be checked"},{property:"id",type:["string"],default:"",values:[],description:"Radio id"},{property:"name",type:["string"],default:"",values:[],description:"Radio name"},{property:"value",type:["string","number"],default:"",values:[],description:"Radio value"},{property:"onChange",type:["React.ChangeEventHandler<HTMLInputElement>"],default:"",values:[],description:"The callback invoked when the checked state of the `Radio` changes.."},{property:"aria-label",type:["string"],default:"",values:[],description:"A label that describes the input"},{property:"aria-describedby",type:["string"],default:"",values:[],description:"The id of the element that describes the input."},{property:"aria-labelledby",type:["string"],default:"",values:[],description:"Refers to the id of the element that labels the checkbox element."}]},{name:"Radio.Group",value:"radio-group",propTypes:[{property:"id",type:["string"],default:"",values:[],description:"The id of the radio group."},{property:"name",type:["string"],default:"",values:[],description:"The name of the radio group. This prop is passed to each radio"},{property:"defaultValue",type:['RadioProps["defaultValue"]'],default:"",values:[],description:"The initial value of the radio group"},{property:"value",type:['RadioProps["value"]'],default:"",values:[],description:"The value of the radio group"},{property:"onChange",type:['(event: React.ChangeEvent, value: RadioProps["value"]) => void;'],default:"",values:[],description:"The callback fired when any children Radio is checked or unchecked"},{property:"inline",type:["boolean"],default:!1,values:[],description:"The radio will aligned horizontally"},{property:"size",type:['RadioProps["size"]'],default:"",values:[],description:"Size of all wrapped radio"},{property:"color",type:['RadioProps["color"]'],default:"",values:[],description:"Color of all wrapped radio"}]}],t={name:"Radio",importer:'import { Radio } from "@andromedaprotocol/react"',demoList:[{name:"Basic usage",files:[{name:"radio.tsx",code:'<div className="flex flex-wrap w-full p-8 space-x-4">\n  <Radio name="basic">First</Radio>\n  <Radio name="basic" defaultChecked>\n    Second\n  </Radio>\n</div>',readOnly:!1}]},{name:"Adding color",files:[{name:"radio.tsx",code:'<div className="flex flex-wrap w-full p-8 space-x-4">\n  <Radio name="basic" color="orange">First</Radio>\n  <Radio name="basic" defaultChecked color="orange">\n    Second\n  </Radio>\n</div>',readOnly:!1},d.g]},{name:"Invalid state",files:[{name:"radio.tsx",code:'<div className="flex flex-wrap w-full p-8 space-x-4">\n  <Radio invalid name="invalid">\n    First\n  </Radio>\n  <Radio invalid name="invalid" defaultChecked>\n    Second\n  </Radio>\n</div>',readOnly:!1}]},{name:"Disabled state",files:[{name:"radio.tsx",code:'<div className="flex flex-wrap w-full p-8 space-x-4">\n  <Radio disabled name="disabled">\n    First\n  </Radio>\n  <Radio disabled name="disabled" defaultChecked>\n    Second\n  </Radio>\n\n  <Radio readOnly name="readOnly">\n    First\n  </Radio>\n  <Radio readOnly name="readOnly" defaultChecked>\n    Second\n  </Radio>\n</div>',readOnly:!1}]},{name:"Sizes",files:[{name:"radio.tsx",code:'<div className="flex flex-wrap w-full p-8 space-x-4">\n  <Radio size="sm" name="size">\n    Radio\n  </Radio>\n  <Radio size="md" name="size">\n    Radio\n  </Radio>\n  <Radio size="lg" name="size">\n    Radio\n  </Radio>\n  <Radio size="lg" name="size">\n    Radio\n  </Radio>\n</div>',readOnly:!1}]},{name:"Radio group",files:[{name:"radio.tsx",code:'<div className="flex flex-wrap w-full p-8 space-x-4">\n  <Radio.Group defaultValue="2" className="space-x-4" inline>\n    <Radio value="1">First</Radio>\n    <Radio value="2">Second</Radio>\n    <Radio value="3">Third</Radio>\n  </Radio.Group>\n</div>',readOnly:!1}]},{name:"Form control",files:[{name:"radio.tsx",code:'<div className="flex flex-wrap w-full p-8 space-x-4">\n  <FormControl>\n    <FormLabel>Radio Group</FormLabel>\n    <Radio.Group defaultValue="2" className="space-x-4" inline>\n      <Radio value="1">First</Radio>\n      <Radio value="2">Second</Radio>\n      <Radio value="3">Third</Radio>\n    </Radio.Group>\n    <FormHelperText>Select only if you\'re a fan.</FormHelperText>\n  </FormControl>\n</div>',readOnly:!1}]}],propList:l};function s(){return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.Z,{title:"Tailwind CSS Radio",description:"Radio buttons allow a user to select a single option from a list of predefined options."}),(0,n.jsx)(i.Z,{component:t})]})}},78943:function(e,a,o){"use strict";o.d(a,{g:function(){return n},D:function(){return i}});var n={name:"tailwind.config.js",code:'import colors from "tailwindcss/colors";\n\nmodule.exports = {\n  mode: "jit",\n  purge: [\n    // ...\n    "./node_modules/@andromedaprotocol/**/*.{js,ts,jsx,tsx}", \n  ],\n  darkMode: "class", // or \'media\' or \'class\'\n  theme: {\n    extend: {\n      colors: {\n        orange: colors.orange,\n      }\n    }\n  },\n  variants: {\n    extend: {},\n  },\n  // add plugin\n  plugins: [\n    require("@tailwindcss/forms"),\n    require("@andromedaprotocol/core")({\n      colors: ["orange"],\n    }),\n    // ...\n  ],\n};',readOnly:!0},i={name:"tailwind.config.js",code:'module.exports = {\n  mode: "jit",\n  purge: [\n    // ...\n    "./node_modules/@andromedaprotocol/**/*.{js,ts,jsx,tsx}", \n  ],\n  darkMode: "class", // or \'media\' or \'class\'\n  theme: {\n    extend: {\n      borderColor: {\n        inherit: "inherit",\n      },\n    }\n  },\n  variants: {\n    extend: {},\n  },\n  // add plugin\n  plugins: [\n    require("@tailwindcss/forms"),\n    require("@andromedaprotocol/core"),\n    // ...\n  ],\n};',readOnly:!0}},32472:function(e,a,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/radio",function(){return o(83564)}])}},function(e){e.O(0,[1955,3989,1283,3430,8838,9774,2888,179],(function(){return a=32472,e(e.s=a);var a}));var a=e.O();_N_E=a}]);