(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5864],{40706:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return l}});var a=t(24246),s=(t(27378),t(34844)),o=t(82745),r={name:"Listbox",importer:'import { Listbox, Transition } from "@headlessui/react";\nimport { cx } from "@andromedaprotocol/react";',demoList:[{name:"Basic Usage",files:[{name:"listbox.tsx",code:'function App() {\n  const people = [\n    "Wade Cooper",\n    "Arlene Mccoy",\n    "Devon Webb",\n    "Tom Cook",\n    "Tanya Fox",\n  ];\n\n  const [selectedPerson, setSelectedPerson] = React.useState(people[0]);\n\n  return (\n    <div className="p-8">\n      <Listbox\n        value={selectedPerson}\n        onChange={setSelectedPerson}\n        as="div"\n        className="relative space-y-1"\n      >\n        {({ open }) => (\n          <>\n            <Listbox.Button\n              className={cx(\n                "relative w-full min-w-0 inline-flex items-center appearance-none focus:outline-none",\n                "h-9 px-3 py-0 text-sm rounded-base pr-6 cursor-base",\n                "border shadow-sm border-neutral-200",\n                "text-neutral-900 bg-white",\n                "hover:border-neutral-300",\n                "focus:ring-1 focus:ring-primary-500 focus:border-primary-500",\n                "dark:border-neutral-700",\n                "dark:text-neutral-100 dark:bg-base",\n                "dark:hover:border-neutral-600",\n                "dark:focus:border-primary-500"\n              )}\n            >\n              {!selectedPerson && (\n                <span className="text-sm text-gray-400 truncate">\n                  Choose an item\n                </span>\n              )}\n              <span className="text-sm truncate">{selectedPerson}</span>\n              <span className="absolute flex items-center ml-3 pointer-events-none right-1">\n                <Icon\n                  as={SelectorIcon}\n                  className={cx(\n                    "w-4 h-4",\n                    open ? "text-primary-500" : "text-gray-400"\n                  )}\n                  label="selector"\n                  aria-hidden="true"\n                />\n              </span>\n            </Listbox.Button>\n\n            <Transition\n              show={open}\n              as={React.Fragment}\n              enter="transition ease-in-out duration-100"\n              enterFrom="opacity-0"\n              enterTo="opacity-100"\n              leave="transition ease-out duration-75"\n              leaveFrom="opacity-100"\n              leaveTo="opacity-0"\n            >\n              <Listbox.Options\n                static\n                className={cx(\n                  "absolute left-0 z-40 max-h-64 w-full mt-2 origin-top-left rounded-base shadow-sm outline-none overflow-auto",\n                  "bg-white border border-gray-200",\n                  "dark:bg-neutral-800 dark:border-gray-700",\n                  "py-1.5 px-1.5"\n                )}\n              >\n                {people.map((person) => (\n                  <Listbox.Option\n                    className="relative"\n                    key={person}\n                    value={person}\n                  >\n                    {({ active, selected, disabled }) => (\n                      <button\n                        disabled={disabled}\n                        aria-disabled={disabled}\n                        className={cx(\n                          "flex items-center w-full px-3 h-9 border-0 flex-shrink-0 text-sm text-left cursor-base font-normal focus:outline-none rounded-base",\n                          active && "bg-neutral-100 dark:bg-neutral-700",\n                        )}\n                      >\n                        <span\n                          className={cx(\n                            "flex-1 block truncate",\n                            selected ? "font-semibold" : "font-normal"\n                          )}\n                        >\n                          {person}\n                        </span>\n                        {selected && (\n                          <span\n                            className="absolute h-6 rounded-full -left-1 bg-primary-500"\n                            style={{ width: 2 }}\n                          ></span>\n                        )}\n                      </button>\n                    )}\n                  </Listbox.Option>\n                ))}\n              </Listbox.Options>\n            </Transition>\n          </>\n        )}\n      </Listbox>\n    </div>\n  );\n}',readOnly:!1}]},{name:"With Icon",files:[{name:"listbox.tsx",code:'function App() {\n  const people = [\n    "Wade Cooper",\n    "Arlene Mccoy",\n    "Devon Webb",\n    "Tom Cook",\n    "Tanya Fox",\n  ];\n\n  const [selectedPerson, setSelectedPerson] = React.useState(people[0]);\n\n  return (\n    <div className="p-8">\n      <Listbox\n        value={selectedPerson}\n        onChange={setSelectedPerson}\n        as="div"\n        className="relative space-y-1"\n      >\n        {({ open }) => (\n          <>\n            <Listbox.Button\n              className={cx(\n                "relative w-full min-w-0 inline-flex items-center appearance-none focus:outline-none",\n                "h-9 px-3 py-0 text-sm rounded-base pr-6 cursor-base",\n                "border shadow-sm border-neutral-200",\n                "text-neutral-900 bg-white",\n                "hover:border-neutral-300",\n                "focus:ring-1 focus:ring-primary-500 focus:border-primary-500",\n                "dark:border-neutral-700",\n                "dark:text-neutral-100 dark:bg-base",\n                "dark:hover:border-neutral-600",\n                "dark:focus:border-primary-500"\n              )}\n            >\n              {!selectedPerson && (\n                <span className="text-sm text-gray-400 truncate">\n                  Choose an item\n                </span>\n              )}\n              <span className="text-sm truncate">{selectedPerson}</span>\n              <span className="absolute flex items-center ml-3 pointer-events-none right-1">\n                <Icon\n                  as={SelectorIcon}\n                  className={cx(\n                    "w-4 h-4",\n                    open ? "text-primary-500" : "text-gray-400"\n                  )}\n                  label="selector"\n                  aria-hidden="true"\n                />\n              </span>\n            </Listbox.Button>\n\n            <Transition\n              show={open}\n              as={React.Fragment}\n              enter="transition ease-in-out duration-100"\n              enterFrom="opacity-0"\n              enterTo="opacity-100"\n              leave="transition ease-out duration-75"\n              leaveFrom="opacity-100"\n              leaveTo="opacity-0"\n            >\n              <Listbox.Options\n                static\n                className={cx(\n                  "absolute left-0 z-40 max-h-64 w-full mt-2 origin-top-left rounded-base shadow-sm outline-none overflow-auto",\n                  "bg-white border border-gray-200",\n                  "dark:bg-neutral-800 dark:border-gray-700",\n                  "py-1.5 px-1.5 space-y-1"\n                )}\n              >\n                {people.map((person) => (\n                  <Listbox.Option\n                    className="relative"\n                    key={person}\n                    value={person}\n                  >\n                    {({ active, selected, disabled }) => (\n                      <button\n                        disabled={disabled}\n                        aria-disabled={disabled}\n                        className={cx(\n                          "flex items-center w-full px-4 pl-10 h-9 border-0 flex-shrink-0 text-sm text-left cursor-base font-normal focus:outline-none rounded-base",\n                          active && "bg-neutral-100 dark:bg-neutral-700",\n                          selected &&\n                            "bg-primary-50 text-primary-800 dark:bg-primary-200 dark:bg-opacity-15 dark:text-primary-200",\n                        )}\n                      >\n                        <span\n                          className={cx(\n                            "flex-1 block truncate",\n                            selected ? "font-semibold" : "font-normal"\n                          )}\n                        >\n                          {person}\n                        </span>\n                        {selected && (\n                          <span className="absolute inset-y-0 left-0 flex items-center justify-center w-10">\n                            <Icon\n                              as={CheckIcon}\n                              label="check"\n                              className="w-5 h-5 text-primary-500"\n                            />\n                          </span>\n                        )}\n                      </button>\n                    )}\n                  </Listbox.Option>\n                ))}\n              </Listbox.Options>\n            </Transition>\n          </>\n        )}\n      </Listbox>\n    </div>\n  );\n}',readOnly:!1}]}],propList:[{name:"Listbox",value:"listbox",propTypes:[{extend:!0,path:"https://headlessui.dev/react/listbox",external:!0,label:"See more `Listbox` props."}]}]};function l(){return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(o.Z,{title:"Tailwind CSS Listbox"}),(0,a.jsx)(s.Z,{component:r})]})}},94823:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/listbox",function(){return t(40706)}])}},function(n){n.O(0,[1955,3989,1283,3430,8838,9774,2888,179],(function(){return e=94823,n(n.s=e);var e}));var e=n.O();_N_E=e}]);